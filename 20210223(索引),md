#### 索引
索引是一种特殊的文件(InnoDB数据表上的索引是表空间的一个组成部分)，它们包含着对数据表里所有记录的引用指针。
索引是一种数据结构。数据库索引，是数据库管理系统中一个排序的数据结构，以协助快速查询、更新数据库表中数据。索引的实现通常使用B树及其变种B+树。
更通俗的说，索引就相当于目录。为了方便查找书中的内容，通过对内容建立索引形成目录。索引是一个文件，它是要占据物理空间的

#### 索引有哪些优缺点？
索引的优点:可以大大加快数据的检索速度
索引的缺点:会降低增/改/删的执行效率,占物理空间。

#### 索引类型
主键索引
唯一索引
普通索引
联合索引
全文索引

#### 索引的基本原理
索引用来快速地寻找那些具有特定值的记录。如果没有索引，一般来说执行查询时遍历整张表。
索引的原理很简单，就是把无序的数据变成有序的查询
1. 把创建了索引的列的内容进行排序
2. 对排序结果生成倒排表
3. 在倒排表内容上拼上数据地址链
4. 在查询的时候，先拿到倒排表内容，再取出数据地址链，从而拿到具体数据

#### 创建索引注意事项
1. 最左前缀匹配原则
2. 较频繁作为查询条件的字段才去创建索引
3. 更新频繁字段不适合创建索引
4. 若是不能有效区分数据的列不适合做索引列(如性别，男女未知，最多也就三种，区分度实在太低)
5. 尽量的扩展索引，不要新建索引
6. 使用短索引，如果对长字符串列进行索引，应该指定一个前缀长度，这样能够节省大量索引空
7. 非null字段创建索引

#### 创建索引，删除索引
创建索引
1. 在执行CREATE TABLE时创建索引
2. ALTER TABLE table_name ADD INDEX index_name (column_list);
3. CREATE INDEX index_name ON table_name (column_list);
删除索引
alter table 表名 drop KEY 索引名

#### B树和B+树的区别
1. 在B树中，你可以将键和值存放在内部节点和叶子节点；但在B+树中，内部节点都是键，没有值，叶子节点同时存放键和值。
2. B+树的叶子节点有一条链相连，而B树的叶子节点各自独立。
3. B树只适合随机检索，而B+树同时支持随机检索和顺序检索。而且删除文件效率更高










